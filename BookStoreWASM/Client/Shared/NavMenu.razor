@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime
<nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BookStoreWASM</a>
        <button class="navbar-toggler @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse @NavBarCssClass" id="navbarCollapse" @onclick="ToggleNavMenu">
            <ul class="navbar-nav me-auto mb-2 mb-md-0" style="gap:10px">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> <span>Home</span>
                    </NavLink>
                </li>
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="fetchdata">
                                <span class="oi oi-book" aria-hidden="true"></span><span>Book Catalog</span>
                            </NavLink>
                        </li>
                    </Authorized>
                </AuthorizeView>
                
                <AuthorizeView Roles="Administrator">
                    <Authorized>                
                        <li class="nav-item">
                    <NavLink class="nav-link" href="admin">
                        <span class="oi oi-people" aria-hidden="true"></span><span>Admin</span> 
                    </NavLink>
                </li>
                    </Authorized>

                </AuthorizeView>
            </ul>
            <div class="right-menu">
                <TopMenu />
                <Dropdown Direction="DropdownDirection.Dropstart">
                    <DropdownToggleButton Color="ButtonColor.Secondary">
                        <Icon Name="IconName.PersonCircle" />
                    </DropdownToggleButton>
                    <DropdownMenu Position="DropdownMenuPosition.Start">
                            <DropdownHeader>Hello
                                <AuthorizeView>
                                <Authorized>
                                , @CurrentUser.Identity.Name
                                </Authorized>
                            </AuthorizeView>
                            </DropdownHeader>
                        <LoginDisplay />
                    </DropdownMenu>
                </Dropdown>
                
            </div>
        </div>
    </div>
</nav>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;


    System.Security.Claims.ClaimsPrincipal CurrentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        CurrentUser = authState.User;
        await JSRuntime.InvokeVoidAsync("removeCssVariable", "--bs-dropdown-bg");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
